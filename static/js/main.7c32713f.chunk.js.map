{"version":3,"sources":["utils/api.js","utils/workAround.js","images/loading.png","Components/Loading.js","Components/Scroll.js","Components/Card.js","Components/CardList.js","Components/Switcher.js","Components/MainPage.js","Components/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["API","options","method","headers","cacheName","a","caches","delete","fetchCachedData","route","open","cache","match","response","fetchData","undefined","json","fetch","then","res","ok","add","setTimeout","Error","catch","console","log","Loading","className","src","loading","alt","Scroll","props","scrollChild","useRef","content","children","list","useState","stepNumber","setStepNumber","slice","visibleContent","setVisibleContent","hasMore","setHasMore","useEffect","createObserver","min","Math","length","IntersectionObserver","rootMargin","threshold","observe","current","type","ref","Card","info","name","price","color","join","manufacturer","availability","CardList","map","item","index","Switcher","categories","categoryOnDisplay","switchCategory","style","border","onClick","MainPage","products","setProducts","setCategoryOnDisplay","manufacturers","setManufacturers","loadingStatus","setloadingStatus","error","setError","fetchIndicator","setfetchIndicator","fetchProduct","fetchAvailability","Set","data","forEach","err","availabilityInfo","find","one","id","toLowerCase","productAvailability","payload","formattedPayload","replace","formatPayload","DATAPAYLOAD","newCategory","ErrorBoundary","state","errorInfo","this","setState","clearCache","window","location","reload","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c32713f.chunk.js","sourcesContent":["const API = \"https://bad-api-assignment.reaktor.com/\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"Cache-Control\": \"max-age=300, must-revalidate\",\n  // \"x-force-error-mode\": \"all\",\n};\n\nconst options = {\n  method: \"GET\",\n  headers,\n};\n\nconst cacheName = \"app-cache\";\n\nexport async function clearCache() {\n  caches.delete(cacheName);\n}\n\nasync function fetchCachedData(route) {\n  const cache = await caches.open(cacheName);\n  const response = await cache.match(`${API}${route}`);\n  return response;\n}\n\nexport async function fetchData(route) {\n  const cache = await caches.open(cacheName);\n  const response = await fetchCachedData(route);\n  if (response !== undefined) {\n    return response.json();\n  } else {\n    return fetch(`${API}${route}`, options)\n      .then((res) => {\n        if (res.ok) {\n          cache.add(`${API}${route}`);\n          setTimeout(() => cache.delete(`${API}${route}`), 1000 * 60 * 5);\n          return res.json();\n        } else {\n          throw new Error(\"request failed\");\n        }\n      })\n      .catch(console.log);\n  }\n}\n","export const formatPayload = (payload) => {\n  let formattedPayload = payload.replace(\n    \"<AVAILABILITY>\\n  <INSTOCKVALUE>\",\n    \"\"\n  );\n  formattedPayload = formattedPayload.replace(\n    \"</INSTOCKVALUE>\\n</AVAILABILITY>\",\n    \"\"\n  );\n  switch (formattedPayload) {\n    case \"OUTOFSTOCK\":\n      formattedPayload = \"OUT OF STOCK\";\n      break;\n    case \"LESSTHAN10\":\n      formattedPayload = \"LESS THAN 10\";\n      break;\n    case \"INSTOCK\":\n      formattedPayload = \"IN STOCK\";\n      break;\n    default:\n      break;\n  }\n\n  return formattedPayload;\n};\n","export default __webpack_public_path__ + \"static/media/loading.b33cf617.png\";","import loading from \"../images/loading.png\";\n\nfunction Loading() {\n  return (\n    <div className=\"flex-center\">\n      <img src={loading} alt=\"loading\" className=\"rotation\"></img>\n    </div>\n  );\n}\n\nexport default Loading;\n","import { useEffect, useState, useRef } from \"react\";\n\nimport Loading from \"./Loading\";\n\nfunction Scroll(props) {\n  let scrollChild = useRef(null);\n  const content = props.children.props.list;\n  const stepValue = 20;\n  let [stepNumber, setStepNumber] = useState(1);\n  let [visibleContent, setVisibleContent] = useState(\n    content.slice(0, stepValue)\n  );\n  let [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    createObserver();\n    // when component dismounts it sets state to the initial\n    return () => {\n      setStepNumber(1);\n      setVisibleContent(content.slice(0, stepValue));\n    };\n  }, []);\n\n  useEffect(() => {\n    const min = Math.min(content.length, stepValue * (stepNumber + 1));\n    // if the whole content list is on display, it stops to show loader\n    if (min !== content.length) {\n      setHasMore(true);\n    }\n    setStepNumber(stepNumber + 1);\n    setVisibleContent(content.slice(0, min));\n  }, [hasMore]);\n\n  const createObserver = () => {\n    let options = {\n      // default\n      rootMargin: \"0px\",\n      // default\n      threshold: 1,\n    };\n\n    const observer = new IntersectionObserver(() => {\n      //triggers rerender\n      setHasMore(false);\n    }, options);\n    observer.observe(scrollChild.current);\n  };\n\n  return (\n    <div className=\"scroll\">\n      <props.children.type list={visibleContent} />\n      <div ref={scrollChild}>{hasMore && <Loading />}</div>\n    </div>\n  );\n}\n\nexport default Scroll;\n","import Loading from \"./Loading\";\n\nfunction Card({ info }) {\n  return (\n    <div className=\"card\">\n      <div className=\"fixed-height\">\n        <p className=\"name\">{info.name}</p>\n        <p>Price: {info.price}</p>\n        <p>Colors: {info.color.join(\"-\")}</p>\n        <p>Mfr.: {info.manufacturer}</p>\n      </div>\n      {info.availability ? (\n        // todo: find better way to style availability info due to text\n        <p\n          className={\n            info.availability === \"OUT OF STOCK\"\n              ? \"out\"\n              : info.availability === \"LESS THAN 10\"\n              ? \"less-than-10\"\n              : \"\"\n          }\n        >\n          {info.availability}\n        </p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\nexport default Card;\n","import Card from \"./Card\";\n\nfunction CardList({ list }) {\n  return (\n    <div className=\"grid\">\n      {list.map((item, index) => (\n        <Card key={index} info={item} />\n      ))}\n    </div>\n  );\n}\n\nexport default CardList;\n","function Switcher({ categories, categoryOnDisplay, switchCategory }) {\n  return (\n    <div className=\"switcher flex-row\">\n      {categories.map((item, index) => {\n        return (\n          <button\n            style={\n              categoryOnDisplay === item ? { border: \"2px solid black\" } : {}\n            }\n            onClick={() => switchCategory(item)}\n            key={index}\n          >\n            {item}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Switcher;\n","import { useState, useEffect } from \"react\";\n\nimport \"../App.css\";\nimport { fetchData } from \"../utils/api\";\nimport { formatPayload } from \"../utils/workAround\";\n\nimport Scroll from \"./Scroll\";\nimport CardList from \"./CardList\";\nimport Switcher from \"./Switcher\";\nimport Loading from \"./Loading\";\n\nfunction MainPage() {\n  const productCategories = [\"jackets\", \"shirts\", \"accessories\"];\n  const initialCategory = \"shirts\";\n\n  let [products, setProducts] = useState([]);\n  let [categoryOnDisplay, setCategoryOnDisplay] = useState(initialCategory);\n  let [manufacturers, setManufacturers] = useState([]);\n  let [loadingStatus, setloadingStatus] = useState(true);\n  let [error, setError] = useState(\"\");\n  // = index shows for which element in the \"manufacturers\" array \"fetchAvailability\" function loads data now\n  // values could be: -1, 0 -> manufacturers.length (included)\n  let [fetchIndicator, setfetchIndicator] = useState(-1);\n\n  useEffect(() => {\n    fetchProduct();\n  }, [categoryOnDisplay]);\n\n  useEffect(() => {\n    if (!loadingStatus) {\n      fetchAvailability();\n    }\n  }, [fetchIndicator]);\n\n  useEffect(() => {\n    if (error) {\n      throw new Error(error);\n    }\n  }, [error]);\n\n  // fetch products for the categoryOnDisplay\n  const fetchProduct = () => {\n    let manufacturers = new Set();\n    fetchData(`products/${categoryOnDisplay}`)\n      .then((data) => {\n        data.forEach((item) => manufacturers.add(item.manufacturer));\n        setProducts(data);\n        setloadingStatus(false);\n        setManufacturers([...manufacturers]);\n        setfetchIndicator(0);\n      })\n      .catch((err) => {\n        setError(err);\n      });\n  };\n\n  //  fetch availability for the manufacturer and upload it to products array\n  const fetchAvailability = () => {\n    // true == data was fetched for all manufacturers\n    if (fetchIndicator === manufacturers.length) {\n      return;\n    } else {\n      const manufacturer = manufacturers[fetchIndicator];\n      fetchData(`availability/${manufacturer}`)\n        .then((data) => {\n          // workaround: change data.response to data\n          const availability = data.response;\n          // go through the products array and search for the same id in the availability array, which was just fetched\n          for (let index = 0; index < products.length; index++) {\n            if (products[index].manufacturer === manufacturer) {\n              const availabilityInfo = availability.find(\n                (one) => products[index].id === one.id.toLowerCase()\n              );\n              if (availabilityInfo !== undefined) {\n                // workaround: format data from the source\n                const productAvailability = formatPayload(\n                  availabilityInfo.DATAPAYLOAD\n                );\n\n                // upload availability info to product\n                products[index].availability = productAvailability;\n              }\n            } else {\n              continue;\n            }\n          }\n          setProducts(products);\n          setfetchIndicator(fetchIndicator + 1);\n        })\n        .catch((err) => {\n          setError(err);\n        });\n    }\n  };\n\n  // is invoked when user changes product category by pressing the button in the Switcher\n  const switchCategory = (newCategory) => {\n    setCategoryOnDisplay(newCategory);\n    setloadingStatus(true);\n  };\n\n  return (\n    <div>\n      <Switcher\n        categoryOnDisplay={categoryOnDisplay}\n        categories={productCategories}\n        switchCategory={switchCategory}\n      />\n      {loadingStatus ? (\n        <Loading />\n      ) : (\n        <Scroll>\n          <CardList list={products} />\n        </Scroll>\n      )}\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { clearCache } from \"../utils/api\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super();\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // find a way to preserve all valid cached responses when error occurs\n    clearCache();\n    setTimeout(() => window.location.reload(), 5000);\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h1>Small error occured</h1>\n          <p>The page will reload in 5s.</p>\n          <h1>We are sorry!</h1>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import MainPage from \"./Components/MainPage\";\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\nfunction App() {\n  return (\n    <div>\n      <ErrorBoundary>\n        <MainPage />\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}